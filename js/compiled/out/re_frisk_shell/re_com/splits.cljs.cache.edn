{:rename-macros {}, :renames {}, :externs {document {}, parseInt {}}, :use-macros {validate-args-macro re-com.validate, handler-fn re-com.core}, :excludes #{}, :name re-frisk-shell.re-com.splits, :imports nil, :requires {re-com.util re-com.util, re-com.box re-com.box, re-com.validate re-com.validate, reagent reagent.core, reagent.core reagent.core}, :cljs.spec/speced-vars [], :uses {sum-scroll-offsets re-com.util, html-attr? re-com.validate, flex-flow-style re-com.box, css-style? re-com.validate, string-or-hiccup? re-com.validate, flex-child-style re-com.box, number-or-string? re-com.validate}, :defs {drag-handle {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/resources/public/js/compiled/out/re_frisk_shell/re_com/splits.cljs", :line 14, :column 7, :end-line 14, :end-column 18, :arglists (quote ([orientation over?])), :doc "Return a drag handle to go into a vertical or horizontal splitter bar:\n    orientation: Can be :horizonal or :vertical\n    over?:       When true, the mouse is assumed to be over the splitter so show a bolder color"}, :name re-frisk-shell.re-com.splits/drag-handle, :variadic false, :file "resources/public/js/compiled/out/re_frisk_shell/re_com/splits.cljs", :end-column 18, :method-params ([orientation over?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([orientation over?])), :doc "Return a drag handle to go into a vertical or horizontal splitter bar:\n    orientation: Can be :horizonal or :vertical\n    over?:       When true, the mouse is assumed to be over the splitter so show a bolder color"}, h-split {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/resources/public/js/compiled/out/re_frisk_shell/re_com/splits.cljs", :line 39, :column 7, :end-line 39, :end-column 14, :arglists (quote ([& {:keys [size width height on-split-change initial-split splitter-size margin document], :or {size "auto", initial-split 50, splitter-size "8px", margin "8px", document js/document}, :as args}])), :doc "Returns markup for a horizontal layout component", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [size width height on-split-change initial-split splitter-size margin document], :or {size "auto", initial-split 50, splitter-size "8px", margin "8px", document js/document}, :as args})], :arglists ([& {:keys [size width height on-split-change initial-split splitter-size margin document], :or {size "auto", initial-split 50, splitter-size "8px", margin "8px", document js/document}, :as args}]), :arglists-meta (nil)}}, :name re-frisk-shell.re-com.splits/h-split, :variadic true, :file "resources/public/js/compiled/out/re_frisk_shell/re_com/splits.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [size width height on-split-change initial-split splitter-size margin document], :or {size "auto", initial-split 50, splitter-size "8px", margin "8px", document js/document}, :as args})], :arglists ([& {:keys [size width height on-split-change initial-split splitter-size margin document], :or {size "auto", initial-split 50, splitter-size "8px", margin "8px", document js/document}, :as args}]), :arglists-meta (nil)}, :method-params [({:keys [size width height on-split-change initial-split splitter-size margin document], :or {size "auto", initial-split 50, splitter-size "8px", margin "8px", document js/document}, :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [size width height on-split-change initial-split splitter-size margin document], :or {size "auto", initial-split 50, splitter-size "8px", margin "8px", document js/document}, :as args}]), :doc "Returns markup for a horizontal layout component"}, v-split {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/resources/public/js/compiled/out/re_frisk_shell/re_com/splits.cljs", :line 116, :column 7, :end-line 116, :end-column 14, :arglists (quote ([& {:keys [size width height on-split-change initial-split splitter-size margin document open-bottom-split?], :or {size "auto", initial-split 50, splitter-size "8px", margin "8px", document js/document}, :as args}])), :doc "Returns markup for a vertical layout component", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [size width height on-split-change initial-split splitter-size margin document open-bottom-split?], :or {size "auto", initial-split 50, splitter-size "8px", margin "8px", document js/document}, :as args})], :arglists ([& {:keys [size width height on-split-change initial-split splitter-size margin document open-bottom-split?], :or {size "auto", initial-split 50, splitter-size "8px", margin "8px", document js/document}, :as args}]), :arglists-meta (nil)}}, :name re-frisk-shell.re-com.splits/v-split, :variadic true, :file "resources/public/js/compiled/out/re_frisk_shell/re_com/splits.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [size width height on-split-change initial-split splitter-size margin document open-bottom-split?], :or {size "auto", initial-split 50, splitter-size "8px", margin "8px", document js/document}, :as args})], :arglists ([& {:keys [size width height on-split-change initial-split splitter-size margin document open-bottom-split?], :or {size "auto", initial-split 50, splitter-size "8px", margin "8px", document js/document}, :as args}]), :arglists-meta (nil)}, :method-params [({:keys [size width height on-split-change initial-split splitter-size margin document open-bottom-split?], :or {size "auto", initial-split 50, splitter-size "8px", margin "8px", document js/document}, :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [size width height on-split-change initial-split splitter-size margin document open-bottom-split?], :or {size "auto", initial-split 50, splitter-size "8px", margin "8px", document js/document}, :as args}]), :doc "Returns markup for a vertical layout component"}}, :cljs.spec/registry-ref [], :require-macros {re-com.core re-com.core, re-com.validate re-com.validate, reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:splitter-size :on-split-change :horizontal :border-right :_margin :open-bottom-split? :_width :_on-split-change :top :on-mouse-out :overflow :background-color :width :cursor :vertical :_size :on-mouse-down :size :style :_height :div :_initial-split :document :id :class :on-mouse-move :on-mouse-up :on-mouse-leave :on-mouse-over :_splitter-size :panel-1 :panel-2 :pointer-events :height :border-bottom :initial-split :left :margin :attr}, :order [:vertical :div :class :style :width :height :margin :border-right :border-bottom :size :on-split-change :initial-split :splitter-size :document :left :id :on-mouse-up :on-mouse-leave :on-mouse-move :overflow :pointer-events :on-mouse-down :on-mouse-over :on-mouse-out :cursor :background-color :_splitter-size :panel-2 :panel-1 :attr :_margin :_on-split-change :_width :_size :_height :_initial-split :open-bottom-split? :top :horizontal]}, :doc nil}