{:rename-macros {}, :renames {}, :externs {setTimeout {}}, :use-macros {go cljs.core.async.macros}, :excludes #{}, :name maze-evolution.views, :imports nil, :requires {subs maze-evolution.subs, reagent reagent.core, reagent.core reagent.core, cljs.js cljs.js, cljs.core.async cljs.core.async, maze-evolution.events maze-evolution.events, events maze-evolution.events, maze-evolution.subs maze-evolution.subs, re-frame re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses {timeout cljs.core.async, <! cljs.core.async}, :defs {title {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 10, :column 7, :end-line 10, :end-column 12, :arglists (quote ([]))}, :name maze-evolution.views/title, :variadic false, :file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, create-rectangles {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 15, :column 7, :end-line 15, :end-column 24, :arglists (quote ([maze]))}, :name maze-evolution.views/create-rectangles, :variadic false, :file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :end-column 24, :method-params ([maze]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([maze]))}, draw-maze {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 27, :column 7, :end-line 27, :end-column 16, :arglists (quote ([]))}, :name maze-evolution.views/draw-maze, :variadic false, :file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-ball {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 33, :column 7, :end-line 33, :end-column 16, :arglists (quote ([]))}, :name maze-evolution.views/draw-ball, :variadic false, :file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, render-maze-and-ball {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 40, :column 7, :end-line 40, :end-column 27, :arglists (quote ([]))}, :name maze-evolution.views/render-maze-and-ball, :variadic false, :file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, move-ball-in-interval {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 42, :column 7, :end-line 42, :end-column 28, :arglists (quote ([remaining-moves]))}, :name maze-evolution.views/move-ball-in-interval, :variadic false, :file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :end-column 28, :method-params ([remaining-moves]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([remaining-moves]))}, button {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 46, :column 7, :end-line 46, :end-column 13, :arglists (quote ([]))}, :name maze-evolution.views/button, :variadic false, :file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main-panel {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 51, :column 7, :end-line 51, :end-column 17, :arglists (quote ([]))}, :name maze-evolution.views/main-panel, :variadic false, :file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {cljs.core.async.macros cljs.core.async.macros, reagent reagent.core, reagent.core reagent.core, cljs.js cljs.js}, :cljs.analyzer/constants {:seen #{:y :r :remaining-moves :move-ball :fill :value :circle :width :type :on-click :style :div :g :cx :id :cy :svg :maze-map :h2 :x :input :h1 :rect :current-position :height}, :order [:div :h1 :h2 :rect :x :y :width :height :maze-map :svg :id :g :current-position :circle :style :r :cx :cy :fill :move-ball :remaining-moves :input :type :value :on-click]}, :doc nil}