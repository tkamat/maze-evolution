{:rename-macros {}, :renames {}, :externs {goog {string {StringBuffer {prototype {append {}}}}}}, :use-macros {go cljs.core.async.macros}, :excludes #{}, :name maze-evolution.views, :imports nil, :requires {subs maze-evolution.subs, reagent reagent.core, reagent.core reagent.core, cljs.js cljs.js, cljs.core.async cljs.core.async, maze-evolution.events maze-evolution.events, events maze-evolution.events, cljs.pprint cljs.pprint, maze-evolution.evolution maze-evolution.evolution, evolution maze-evolution.evolution, maze-evolution.subs maze-evolution.subs, re-frame re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses {timeout cljs.core.async, pprint cljs.pprint, <! cljs.core.async}, :defs {title {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 12, :column 7, :end-line 12, :end-column 12, :arglists (quote ([]))}, :name maze-evolution.views/title, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, create-rectangles {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 19, :column 7, :end-line 19, :end-column 24, :arglists (quote ([maze]))}, :name maze-evolution.views/create-rectangles, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 24, :method-params ([maze]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([maze]))}, draw-maze {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 34, :column 7, :end-line 34, :end-column 16, :arglists (quote ([]))}, :name maze-evolution.views/draw-maze, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-ball {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 40, :column 7, :end-line 40, :end-column 16, :arglists (quote ([]))}, :name maze-evolution.views/draw-ball, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, render-maze-and-ball {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 47, :column 7, :end-line 47, :end-column 27, :arglists (quote ([]))}, :name maze-evolution.views/render-maze-and-ball, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, running {:name maze-evolution.views/running, :file "src/cljs/maze_evolution/views.cljs", :line 49, :column 1, :end-line 49, :end-column 13, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 49, :column 6, :end-line 49, :end-column 13}, :tag any}, test-button {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 50, :column 7, :end-line 50, :end-column 18, :arglists (quote ([]))}, :name maze-evolution.views/test-button, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, new-generation-button {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 55, :column 7, :end-line 55, :end-column 28, :arglists (quote ([]))}, :name maze-evolution.views/new-generation-button, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main-panel {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 59, :column 7, :end-line 59, :end-column 17, :arglists (quote ([]))}, :name maze-evolution.views/main-panel, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {cljs.core.async.macros cljs.core.async.macros, reagent reagent.core, reagent.core reagent.core, cljs.js cljs.js, cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:y :r :generation :pre :fill :value :circle :width :type :on-click :style :div :g :cx :id :cy :svg :maze :maze-map :h2 :individual :x :input :h1 :h3 :rect :current-position :height}, :order [:div :h1 :h2 :h3 :generation :individual :rect :x :y :width :height :maze-map :svg :id :g :current-position :circle :style :r :cx :cy :fill :input :type :value :on-click :pre :maze]}, :doc nil}