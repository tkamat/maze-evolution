{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name maze-evolution.db, :imports nil, :requires {evolution maze-evolution.evolution, maze-evolution.evolution maze-evolution.evolution}, :cljs.spec/speced-vars [], :uses nil, :defs {initial-population {:name maze-evolution.db/initial-population, :file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/db.cljs", :line 4, :column 1, :end-line 4, :end-column 24, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/db.cljs", :line 4, :column 6, :end-line 4, :end-column 24}, :tag any}, default-db {:name maze-evolution.db/default-db, :file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/db.cljs", :line 5, :column 1, :end-line 5, :end-column 16, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/db.cljs", :line 5, :column 6, :end-line 5, :end-column 16}, :tag cljs.core/IMap}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:remaining-moves :generation :move-sequence :evolution :fitness-map :id :population :maze :unique-id :individual :map :current-position}, :order [:evolution :maze :population :generation :individual :map :current-position :remaining-moves :unique-id :fitness-map :move-sequence :id]}, :doc nil}