{:rename-macros {}, :renames {}, :externs {document {getElementById {}}}, :use-macros {}, :excludes #{}, :name maze-evolution.core, :imports nil, :requires {reagent reagent.core, views maze-evolution.views, maze-evolution.views maze-evolution.views, reagent.core reagent.core, maze-evolution.config maze-evolution.config, maze-evolution.events maze-evolution.events, config maze-evolution.config, events maze-evolution.events, re-frame re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses nil, :defs {dev-setup {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/core.cljs", :line 8, :column 7, :end-line 8, :end-column 16, :arglists (quote ([]))}, :name maze-evolution.core/dev-setup, :variadic false, :file "src/cljs/maze_evolution/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/core.cljs", :line 13, :column 16, :end-line 13, :end-column 20, :export true, :arglists (quote ([]))}, :name maze-evolution.core/main, :variadic false, :file "src/cljs/maze_evolution/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, db {:name maze-evolution.core/db, :file "src/cljs/maze_evolution/core.cljs", :line 14, :column 3, :end-line 14, :end-column 14, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/core.cljs", :line 14, :column 12, :end-line 14, :end-column 14}, :tag any}}, :cljs.spec/registry-ref [], :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:initialize-db}, :order [:initialize-db]}, :doc nil}