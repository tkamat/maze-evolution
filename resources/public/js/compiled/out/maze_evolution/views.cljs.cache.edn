{:rename-macros {}, :renames {}, :externs {goog {string {StringBuffer {prototype {append {}}}}}}, :use-macros {go cljs.core.async.macros}, :excludes #{}, :name maze-evolution.views, :imports nil, :requires {subs maze-evolution.subs, reagent reagent.core, reagent.core reagent.core, cljs.js cljs.js, cljs.core.async cljs.core.async, maze-evolution.events maze-evolution.events, events maze-evolution.events, cljs.pprint cljs.pprint, maze-evolution.evolution maze-evolution.evolution, evolution maze-evolution.evolution, maze-evolution.subs maze-evolution.subs, re-frame re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses {timeout cljs.core.async, pprint cljs.pprint, <! cljs.core.async}, :defs {test-button {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 63, :column 7, :end-line 63, :end-column 18, :arglists (quote ([]))}, :name maze-evolution.views/test-button, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, current-tab-underline {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 83, :column 7, :end-line 83, :end-column 28, :arglists (quote ([]))}, :name maze-evolution.views/current-tab-underline, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, individual-and-generation-counter {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 19, :column 7, :end-line 19, :end-column 40, :arglists (quote ([]))}, :name maze-evolution.views/individual-and-generation-counter, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 40, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-maze {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 38, :column 7, :end-line 38, :end-column 16, :arglists (quote ([]))}, :name maze-evolution.views/draw-maze, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, current-panel {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 122, :column 7, :end-line 122, :end-column 20, :arglists (quote ([]))}, :name maze-evolution.views/current-panel, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-ball {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 47, :column 7, :end-line 47, :end-column 16, :arglists (quote ([]))}, :name maze-evolution.views/draw-ball, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, create-rectangles {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 23, :column 7, :end-line 23, :end-column 24, :arglists (quote ([maze]))}, :name maze-evolution.views/create-rectangles, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 24, :method-params ([maze]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([maze]))}, new-generation-button {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 68, :column 7, :end-line 68, :end-column 28, :arglists (quote ([]))}, :name maze-evolution.views/new-generation-button, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, simulation-panel {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 90, :column 7, :end-line 90, :end-column 23, :arglists (quote ([]))}, :name maze-evolution.views/simulation-panel, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main-panel {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 146, :column 7, :end-line 146, :end-column 17, :arglists (quote ([]))}, :name maze-evolution.views/main-panel, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, about-panel {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 103, :column 7, :end-line 103, :end-column 18, :arglists (quote ([]))}, :name maze-evolution.views/about-panel, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, tabs {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 131, :column 7, :end-line 131, :end-column 11, :arglists (quote ([]))}, :name maze-evolution.views/tabs, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, render-maze-and-ball {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 60, :column 7, :end-line 60, :end-column 27, :arglists (quote ([]))}, :name maze-evolution.views/render-maze-and-ball, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, title {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 12, :column 7, :end-line 12, :end-column 12, :arglists (quote ([]))}, :name maze-evolution.views/title, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, running {:name maze-evolution.views/running, :file "src/cljs/maze_evolution/views.cljs", :line 62, :column 1, :end-line 62, :end-column 13, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 62, :column 6, :end-line 62, :end-column 13}, :tag any}, github-badge {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 140, :column 7, :end-line 140, :end-column 19, :arglists (quote ([]))}, :name maze-evolution.views/github-badge, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, continuously-evolve-button {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 72, :column 7, :end-line 72, :end-column 33, :arglists (quote ([]))}, :name maze-evolution.views/continuously-evolve-button, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 33, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, button-group {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 76, :column 7, :end-line 76, :end-column 19, :arglists (quote ([]))}, :name maze-evolution.views/button-group, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {cljs.core.async.macros cljs.core.async.macros, reagent reagent.core, reagent.core reagent.core, cljs.js cljs.js, cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:y :p#about :r :hr :generation :pre :alt :button :top :on-focus :fill :margin-left :simulation :circle :width :current-fitness :src :change-tab :on-click :a.github-badge :style :div :g :cx :id :class :cy :svg :maze :maze-map :position :h2 :individual :x :h1 :border :h3 :tab :rect :href :img :current-position :height :about :left}, :order [:div :h1 :h2 :h3 :generation :individual :rect :x :y :width :height :maze-map :svg :id :g :current-position :circle :style :r :cx :cy :fill :button :on-click :class :tab :about :hr :margin-left :simulation :pre :maze :current-fitness :p#about :on-focus :change-tab :a.github-badge :href :img :alt :src :position :top :left :border]}, :doc nil}