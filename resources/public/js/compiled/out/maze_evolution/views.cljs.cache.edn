{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name maze-evolution.views, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, re-frame re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses nil, :defs {hello-world {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 5, :column 7, :end-line 5, :end-column 18, :arglists (quote ([]))}, :name maze-evolution.views/hello-world, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main-panel {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/src/cljs/maze_evolution/views.cljs", :line 8, :column 7, :end-line 8, :end-column 17, :arglists (quote ([]))}, :name maze-evolution.views/main-panel, :variadic false, :file "src/cljs/maze_evolution/views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:div :h1}, :order [:h1 :div]}, :doc nil}