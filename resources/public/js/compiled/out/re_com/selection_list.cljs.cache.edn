{:rename-macros {}, :renames {}, :externs {Error {}, goog {DEBUG {}}}, :use-macros {validate-args-macro re-com.validate, handler-fn re-com.core}, :excludes #{}, :name re-com.selection-list, :imports nil, :requires {re-com.text re-com.text, re-com.misc re-com.misc, re-com.box re-com.box, re-com.validate re-com.validate, re-com.util re-com.util}, :cljs.spec/speced-vars [], :uses {h-box re-com.box, border re-com.box, string-or-atom? re-com.validate, deref-or-value re-com.util, radio-button re-com.misc, checkbox re-com.misc, box re-com.box, vector-of-maps? re-com.validate, v-box re-com.box, label re-com.text, set-or-atom? re-com.validate, fmap re-com.util}, :defs {spacing-unbordered {:meta {:file "/home/tushaar/Projects/maze-evolution/resources/public/js/compiled/out/re_com/selection_list.cljs", :line 86, :column 14, :end-line 86, :end-column 32, :const true}, :name re-com.selection-list/spacing-unbordered, :file "resources/public/js/compiled/out/re_com/selection_list.cljs", :end-column 32, :const-expr {:op :map, :env {:context :expr}, :form {:padding-left "0px", :padding-right "5px", :padding-top "0px", :padding-bottom "0px", :margin-top "0px", :margin-bottom "0px"}, :keys [{:op :constant, :env {:context :expr}, :form :padding-left, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form :padding-right, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form :padding-top, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form :padding-bottom, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form :margin-top, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form :margin-bottom, :tag cljs.core/Keyword}], :vals [{:op :constant, :env {:context :expr}, :form "0px", :tag string} {:op :constant, :env {:context :expr}, :form "5px", :tag string} {:op :constant, :env {:context :expr}, :form "0px", :tag string} {:op :constant, :env {:context :expr}, :form "0px", :tag string} {:op :constant, :env {:context :expr}, :form "0px", :tag string} {:op :constant, :env {:context :expr}, :form "0px", :tag string}], :children [{:op :constant, :env {:context :expr}, :form :padding-left, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form "0px", :tag string} {:op :constant, :env {:context :expr}, :form :padding-right, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form "5px", :tag string} {:op :constant, :env {:context :expr}, :form :padding-top, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form "0px", :tag string} {:op :constant, :env {:context :expr}, :form :padding-bottom, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form "0px", :tag string} {:op :constant, :env {:context :expr}, :form :margin-top, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form "0px", :tag string} {:op :constant, :env {:context :expr}, :form :margin-bottom, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form "0px", :tag string}], :tag cljs.core/IMap}, :column 1, :const true, :line 86, :end-line 86, :tag cljs.core/IMap}, radio-clicked {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/resources/public/js/compiled/out/re_com/selection_list.cljs", :line 51, :column 8, :end-line 51, :end-column 21, :private true, :arglists (quote ([selections item-id required?]))}, :private true, :name re-com.selection-list/radio-clicked, :variadic false, :file "resources/public/js/compiled/out/re_com/selection_list.cljs", :end-column 21, :method-params ([selections item-id required?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 3, :fn-var true, :arglists (quote ([selections item-id required?]))}, spacing-bordered {:meta {:file "/home/tushaar/Projects/maze-evolution/resources/public/js/compiled/out/re_com/selection_list.cljs", :line 78, :column 14, :end-line 78, :end-column 30, :const true}, :name re-com.selection-list/spacing-bordered, :file "resources/public/js/compiled/out/re_com/selection_list.cljs", :end-column 30, :const-expr {:op :map, :env {:context :expr}, :form {:padding-top "0px", :padding-bottom "0px", :padding-left "5px", :padding-right "5px", :margin-top "5px", :margin-bottom "5px"}, :keys [{:op :constant, :env {:context :expr}, :form :padding-top, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form :padding-bottom, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form :padding-left, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form :padding-right, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form :margin-top, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form :margin-bottom, :tag cljs.core/Keyword}], :vals [{:op :constant, :env {:context :expr}, :form "0px", :tag string} {:op :constant, :env {:context :expr}, :form "0px", :tag string} {:op :constant, :env {:context :expr}, :form "5px", :tag string} {:op :constant, :env {:context :expr}, :form "5px", :tag string} {:op :constant, :env {:context :expr}, :form "5px", :tag string} {:op :constant, :env {:context :expr}, :form "5px", :tag string}], :children [{:op :constant, :env {:context :expr}, :form :padding-top, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form "0px", :tag string} {:op :constant, :env {:context :expr}, :form :padding-bottom, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form "0px", :tag string} {:op :constant, :env {:context :expr}, :form :padding-left, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form "5px", :tag string} {:op :constant, :env {:context :expr}, :form :padding-right, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form "5px", :tag string} {:op :constant, :env {:context :expr}, :form :margin-top, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form "5px", :tag string} {:op :constant, :env {:context :expr}, :form :margin-bottom, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form "5px", :tag string}], :tag cljs.core/IMap}, :column 1, :const true, :line 78, :end-line 78, :tag cljs.core/IMap}, selection-list {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/resources/public/js/compiled/out/re_com/selection_list.cljs", :line 146, :column 7, :end-line 146, :end-column 21, :arglists (quote ([& {:as args}])), :doc "Produce a list box with items arranged vertically", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:as args})], :arglists ([& {:as args}]), :arglists-meta (nil)}}, :name re-com.selection-list/selection-list, :variadic true, :file "resources/public/js/compiled/out/re_com/selection_list.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:as args})], :arglists ([& {:as args}]), :arglists-meta (nil)}, :method-params [({:as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 0, :fn-var true, :arglists ([& {:as args}]), :doc "Produce a list box with items arranged vertically"}, as-checked {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/resources/public/js/compiled/out/re_com/selection_list.cljs", :line 35, :column 8, :end-line 35, :end-column 18, :private true, :arglists (quote ([item id-fn selections on-change disabled? label-fn required? as-exclusions?]))}, :private true, :name re-com.selection-list/as-checked, :variadic false, :file "resources/public/js/compiled/out/re_com/selection_list.cljs", :end-column 18, :method-params ([item id-fn selections on-change disabled? label-fn required? as-exclusions?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 8, :fn-var true, :arglists (quote ([item id-fn selections on-change disabled? label-fn required? as-exclusions?]))}, list-style {:meta {:file "/home/tushaar/Projects/maze-evolution/resources/public/js/compiled/out/re_com/selection_list.cljs", :line 73, :column 14, :end-line 73, :end-column 24, :const true}, :name re-com.selection-list/list-style, :file "resources/public/js/compiled/out/re_com/selection_list.cljs", :end-column 24, :const-expr {:op :map, :env {:context :expr}, :form {:overflow-x "hidden", :overflow-y "auto"}, :keys [{:op :constant, :env {:context :expr}, :form :overflow-x, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form :overflow-y, :tag cljs.core/Keyword}], :vals [{:op :constant, :env {:context :expr}, :form "hidden", :tag string} {:op :constant, :env {:context :expr}, :form "auto", :tag string}], :children [{:op :constant, :env {:context :expr}, :form :overflow-x, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form "hidden", :tag string} {:op :constant, :env {:context :expr}, :form :overflow-y, :tag cljs.core/Keyword} {:op :constant, :env {:context :expr}, :form "auto", :tag string}], :tag cljs.core/IMap}, :column 1, :const true, :line 73, :end-line 73, :tag cljs.core/IMap}, check-clicked {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/resources/public/js/compiled/out/re_com/selection_list.cljs", :line 27, :column 8, :end-line 27, :end-column 21, :private true, :arglists (quote ([selections item-id ticked? required?]))}, :private true, :name re-com.selection-list/check-clicked, :variadic false, :file "resources/public/js/compiled/out/re_com/selection_list.cljs", :end-column 21, :method-params ([selections item-id ticked? required?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 4, :fn-var true, :arglists (quote ([selections item-id ticked? required?]))}, list-container {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/resources/public/js/compiled/out/re_com/selection_list.cljs", :line 112, :column 8, :end-line 112, :end-column 22, :private true, :arglists (quote ([{:keys [choices model on-change id-fn label-fn multi-select? as-exclusions? required? width height max-height disabled? hide-border? item-renderer], :as args}]))}, :private true, :name re-com.selection-list/list-container, :variadic false, :file "resources/public/js/compiled/out/re_com/selection_list.cljs", :end-column 22, :method-params ([p__28411]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [choices model on-change id-fn label-fn multi-select? as-exclusions? required? width height max-height disabled? hide-border? item-renderer], :as args}]))}, configure {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/resources/public/js/compiled/out/re_com/selection_list.cljs", :line 134, :column 8, :end-line 134, :end-column 17, :private true, :arglists (quote ([attributes])), :doc "Augment passed attributes with defaults and deref any atoms"}, :private true, :name re-com.selection-list/configure, :variadic false, :file "resources/public/js/compiled/out/re_com/selection_list.cljs", :end-column 17, :method-params ([attributes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([attributes])), :doc "Augment passed attributes with defaults and deref any atoms"}, as-radio {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/resources/public/js/compiled/out/re_com/selection_list.cljs", :line 57, :column 8, :end-line 57, :end-column 16, :private true, :arglists (quote ([item id-fn selections on-change disabled? label-fn required? as-exclusions?]))}, :private true, :name re-com.selection-list/as-radio, :variadic false, :file "resources/public/js/compiled/out/re_com/selection_list.cljs", :end-column 16, :method-params ([item id-fn selections on-change disabled? label-fn required? as-exclusions?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 8, :fn-var true, :arglists (quote ([item id-fn selections on-change disabled? label-fn required? as-exclusions?]))}, selection-list-args-desc {:name re-com.selection-list/selection-list-args-desc, :file "resources/public/js/compiled/out/re_com/selection_list.cljs", :line 95, :column 1, :end-line 95, :end-column 30, :meta {:file "/home/tushaar/Projects/maze-evolution/resources/public/js/compiled/out/re_com/selection_list.cljs", :line 95, :column 6, :end-line 95, :end-column 30}, :tag cljs.core/IVector}, label-style {:protocol-inline nil, :meta {:file "/home/tushaar/Projects/maze-evolution/resources/public/js/compiled/out/re_com/selection_list.cljs", :line 11, :column 7, :end-line 11, :end-column 18, :arglists (quote ([selected? as-exclusions?] [selected? as-exclusions? selected-color])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([selected? as-exclusions?] [selected? as-exclusions? selected-color]), :arglists ([selected? as-exclusions?] [selected? as-exclusions? selected-color]), :arglists-meta (nil nil)}}, :name re-com.selection-list/label-style, :variadic false, :file "resources/public/js/compiled/out/re_com/selection_list.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([selected? as-exclusions?] [selected? as-exclusions? selected-color]), :arglists ([selected? as-exclusions?] [selected? as-exclusions? selected-color]), :arglists-meta (nil nil)}, :method-params ([selected? as-exclusions?] [selected? as-exclusions? selected-color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 3, :fn-var true, :arglists ([selected? as-exclusions?] [selected? as-exclusions? selected-color])}}, :cljs.spec/registry-ref [], :require-macros {re-com.core re-com.core, re-com.validate re-com.validate}, :cljs.analyzer/constants {:seen #{:description :label-fn :required? :as-exclusions? :max-height :color :default :name :value :hide-border? :margin-top :width :type :choices :id-fn :radius :padding-right :on-click :style :div :padding-top :padding-left :label :id :class :code :overflow-x :label-style :multi-select? :text-decoration :validate-fn :child :padding-bottom :on-change :border :disabled? :overflow-y :margin-bottom :item-renderer :required :height :span :model :attr}, :order [:margin-top :text-decoration :color :class :attr :on-click :child :model :on-change :disabled? :label-style :label :value :overflow-x :overflow-y :padding-top :padding-bottom :padding-left :padding-right :margin-bottom :name :required :type :validate-fn :description :choices :span :code :default :id-fn :id :label-fn :multi-select? :as-exclusions? :required? :width :height :max-height :hide-border? :item-renderer :radius :border :div :style]}, :doc nil}